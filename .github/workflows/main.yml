
name: C# .NET Bluid - Docker Build/Push - SonarCloud

on:
  pull_request:
    branches: [ master ]
    
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x']
        
    permissions:
      contents: read
      packages: read
      statuses: write
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Lint code
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Install dependencies
        run: dotnet restore
        
      - name: Test
        run: dotnet test --no-restore --verbosity normal
          
  sonarcloud:
    needs: [build]
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          sonar.projectKey: "Coin-Vault_coin-vault-microservice-trade"
          sonar.projectName: "Coin-Vault_coin-vault-microservice-trade"
        
  docker:
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: robfontys/coin-vault-microservice-trade:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
